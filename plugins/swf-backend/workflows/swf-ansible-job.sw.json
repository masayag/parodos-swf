{
  "id": "swf-ansible-job",
  "version": "1.0",
  "specVersion": "0.8",
  "name": "[WF] Ansible Job",
  "description": "[WF] Launch an Ansible Job within Ansible Automation Platform",
  "dataInputSchema": "schemas/swf-ansible-job__main_schema.json",
  "functions": [
    {
      "name": "runActionTemplateFetch",
      "operation": "specs/actions-openapi.json#fetch:template"
    },
    {
      "name": "runActionGitHubRepoPush",
      "operation": "specs/actions-openapi.json#github:repo:push"
    },
    {
      "name": "runActionCatalogRegister",
      "operation": "specs/actions-openapi.json#catalog:register"
    }
  ],
  "start": "Generating the Ansible Job component",
  "states": [
    {
      "name": "Generating the Ansible Job component",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "name": "Run Template Fetch Action",
          "functionRef": {
            "refName": "runActionTemplateFetch",
            "arguments": {
              "id": "$WORKFLOW.instanceId",
              "url": "https://github.com/manstis/janus-software-templates/tree/main/scaffolder-templates/ansible-job/skeleton",
              "targetPath": "argo/ansibleJobs/",
              "values": {
                "component_id": "${.component_id}",
                "jobTemplate": "${.jobTemplate}",
                "name": "${.component_id}",
                "namespace": "${.namespace}",
                "connection_secret": "${.connection_secret}"
              }
            }
          }
        }
      ],
      "transition": "Generating the Catalog Info Component"
    },
    {
      "name": "Generating the Catalog Info Component",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "functionRef": {
            "refName": "runActionTemplateFetch",
            "arguments": {
              "id": "$WORKFLOW.instanceId",
              "url": "https://github.com/manstis/janus-software-templates/tree/main/scaffolder-skeletons/catalog-info-skeleton/",
              "values": {
                "githubOrg": "${.githubOrg}",
                "repoName": "${.repoName}",
                "owner": "${.owner}",
                "applicationType": "api",
                "system": "system:default/podcast",
                "description": "${.description}"
              }
            }
          }
        }
      ],
      "transition": "Publish to GitHub"
    },
    {
      "name": "Publish to GitHub",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "functionRef": {
            "refName": "runActionGitHubRepoPush",
            "arguments": {
              "id": "$WORKFLOW.instanceId",
              "repoUrl": "${.repoUrl}",
              "defaultBranch": "${.defaultBranch}",
              "protectDefaultBranch": false,
              "protectEnforceAdmins": false
            }
          },
          "actionDataFilter": {
            "results": "."
          }
        }
      ],
      "transition": "Register Catalog entry"
    },
    {
      "name": "Register Catalog entry",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "functionRef": {
            "refName": "runActionCatalogRegister",
            "arguments": {
              "id": "$WORKFLOW.instanceId",
              "repoContentsUrl": "${.repoContentsUrl}",
              "catalogInfoPath": "/catalog-info.yaml"
            }
          },
          "actionDataFilter": {
            "toStateData": ".actionResult"
          }
        }
      ],
      "end": true
    }
  ]
}