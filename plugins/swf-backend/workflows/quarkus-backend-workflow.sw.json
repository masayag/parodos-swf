{
  "id": "quarkus-backend-workflow",
  "version": "1.0",
  "specVersion": "0.8",
  "name": "[WF] Create a Quarkus Backend application with a CI pipeline",
  "description": "[WF] Create a starter Quarkus Backend application with a CI pipeline",
  "dataInputSchema": "schemas/quarkus-backend-workflow__main_schema.json",
  "functions": [
    {
      "name": "runActionTemplateFetch",
      "operation": "specs/actions-openapi.json#fetch:template"
    },
    {
      "name": "runActionPublishGithub",
      "operation": "specs/actions-openapi.json#publish:github"
    },
    {
      "name": "runActionCatalogRegister",
      "operation": "specs/actions-openapi.json#catalog:register"
    }
  ],
  "start": "Generating the Source Code Component",
  "states": [
    {
      "name": "Generating the Source Code Component",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "name": "Fetch Template Action - Source Code",
          "functionRef": {
            "refName": "runActionTemplateFetch",
            "arguments": {
              "url": "https://github.com/janus-idp/software-templates/blob/main/scaffolder-templates/quarkus-backend-template/skeleton",
              "values": {
                "githubOrg": ".githubOrg",
                "repoName": ".repoName",
                "owner": ".owner",
                "system": ".system",
                "applicationType": "api",
                "description": ".description",
                "namespace": ".namespace",
                "imageUrl": "imageUrl",
                "imageBuilder": ".imageBuilder",
                "imageRepository": ".imageRepository",
                "port": ".port",
                "ci": ".ci",
                "groupId": ".groupId",
                "artifactId": ".artifactId",
                "javaPackageName": ".javaPackageName"
              }
            }
          },
          "actionDataFilter": {
            "toStateData": ".actionFetchTemplateSourceCodeResult"
          }
        }
      ],
      "transition": "Generating the CI Component"
    },
    {
      "name": "Generating the CI Component",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "name": "Run Template Fetch Action - CI",
          "functionRef": {
            "refName": "runActionTemplateFetch",
            "arguments": {
              "url": "https://github.com/janus-idp/software-templates/blob/main/scaffolder-skeletons/github-actions-skeleton/",
              "copyWithoutTemplating": [
                "\".github/workflows/\""
              ],
              "values": {
                "githubOrg": ".githubOrg",
                "repoName": ".repoName",
                "owner": ".owner",
                "system": ".system",
                "applicationType": "api",
                "description": ".description",
                "namespace": ".namespace",
                "imageUrl": "imageUrl",
                "imageBuilder": ".imageBuilder",
                "imageRepository": ".imageRepository",
                "port": ".port",
                "ci": ".ci",
                "groupId": ".groupId",
                "artifactId": ".artifactId",
                "javaPackageName": ".javaPackageName"
              }
            }
          },
          "actionDataFilter": {
            "toStateData": ".actionTemplateFetchCIResult"
          }
        }
      ],
      "transition": "Generating the Catalog Info Component"
    },
    {
      "name": "Generating the Catalog Info Component",
      "type": "operation",
      "actions": [
        {
          "name": "Fetch Template Action - Catalog Info",
          "functionRef": {
            "refName": "runActionTemplateFetch",
            "arguments": {
              "url": "https://github.com/janus-idp/software-templates/tree/main/scaffolder-skeletons/catalog-info-skeleton",
              "values": {
                "githubOrg": ".githubOrg",
                "repoName": ".repoName",
                "owner": ".owner",
                "system": ".system",
                "applicationType": "api",
                "description": ".description",
                "namespace": ".namespace",
                "imageUrl": "imageUrl",
                "imageBuilder": ".imageBuilder",
                "imageRepository": ".imageRepository",
                "port": ".port",
                "ci": ".ci",
                "groupId": ".groupId",
                "artifactId": ".artifactId",
                "javaPackageName": ".javaPackageName"
              }
            }
          },
          "actionDataFilter": {
            "toStateData": ".actionFetchTemplateCatalogInfoResult"
          }
        }
      ],
      "transition": "Publishing to the Source Code Repository"
    },
    {
      "name": "Publishing to the Source Code Repository",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "name": "Publish Github Action",
          "functionRef": {
            "refName": "runActionPublishGithub",
            "arguments": {
              "allowedHosts": [
                "\"github.com\""
              ],
              "description": "Workflow Action",
              "repoUrl": "\"github.com?owner=\" + .githubOrg + \"&repo=\" + .repoName",
              "defaultBranch": ".defaultBranch",
              "gitCommitMessage": ".gitCommitMessage",
              "allowAutoMerge": true,
              "allowRebaseMerge": true
            }
          },
          "actionDataFilter": {
            "toStateData": ".actionPublishResult"
          }
        }
      ],
      "transition": "Registering the Catalog Info Component"
    },
    {
      "name": "Registering the Catalog Info Component",
      "type": "operation",
      "actionMode": "sequential",
      "actions": [
        {
          "name": "Catalog Register Action",
          "functionRef": {
            "refName": "runActionCatalogRegister",
            "arguments": {
              "repoContentsUrl": ".actionPublishResult.repoContentsUrl",
              "catalogInfoPath": "\"/catalog-info.yaml\""
            }
          },
          "actionDataFilter": {
            "toStateData": ".actionCatalogRegisterResult"
          }
        }
      ],
      "end": true
    }
  ]
}